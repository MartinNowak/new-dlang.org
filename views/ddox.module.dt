extends ddox.layout

block ddox.defs
    - import ddox.api;
    - import std.algorithm : canFind;
    - import std.typetuple;

    - alias TypeTuple!(FunctionDeclaration, InterfaceDeclaration, ClassDeclaration, StructDeclaration, UnionDeclaration, EnumDeclaration, TemplateDeclaration) kinds;
    - auto kindids =        ["functions", "interfaces", "classes", "structs", "unions", "enums", "templates"];
    - auto kindnames =      ["Functions", "Interfaces", "Classes", "Structs", "Unions", "Enums", "Templates"];
    - auto kindnames_sing = ["Function",  "Interface",  "Class",   "Struct",  "Union",  "Enum",  "Template"];


    - alias TypeTuple!(EnumMemberDeclaration, VariableDeclaration, AliasDeclaration) tkinds;
    - auto tkindids =        ["enum-values", "global-variables", "aliases"];
    - auto tkindnames =      ["Enum Values", "Global Variables", "Aliases"];
    - auto tkindnames_sing = ["Enum Value",  "Variable",  "Alias"];

block ddox.title
    - auto title = "Module " ~ info.mod.qualifiedName;

block ddox.description
    p!= info.formatDoc(info.mod.docGroup, 2, sec => sec == "$Short")

    |!= info.formatDoc(info.mod.docGroup, 2, sec => sec == "$Long")

block ddox.sections
    section!= info.formatDoc(info.mod.docGroup, 2, sec => !canFind(["License", "Copyright", "Authors", "$Short", "$Long", "Source"], sec))

block ddox.members
    - foreach( i, kind; kinds )
        - if( hasChild!kind(info.mod) )
            section
                h2(id="#{kindids[i]}")= kindnames[i]
                table
                    col.caption
                    tr
                        th Name
                        th Description
                    - foreach( grp; getDocGroups!kind(info.mod) )
                        tr
                            td
                                a(id="#{grp.name}", class=declStyleClasses(grp), href="#{info.linkTo(grp)}")
                                    code= grp.name
                            td!= info.formatDoc(grp.docGroup, 3, sec => sec == "$Short")

    - foreach( i, kind; tkinds )
        - if( hasChild!kind(info.mod) )
            section
                h2(id="#{tkindids[i]}")= tkindnames[i]
                table
                    col.caption
                    tr
                        th Name
                        th Type
                        th Description
                    - foreach( f; getDocGroups!kind(info.mod)  )
                        tr
                            td
                                a(id="#{f.name}", class=declStyleClasses(f), href="#{info.linkTo(f)}")
                                    code= f.name
                            td
                                - if( f.type )
                                    |!= info.formatType(f.type)
                            td!= info.formatDoc(f.docGroup, 3, sec => sec == "$Short")

block ddox.authors
    |!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "Authors")
block ddox.license
    |!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "License")
block ddox.copyright
    |!= info.formatDoc(info.mod.docGroup, 0, sec => sec == "Copyright")

block extra-sidebar
    #toc
        header On This Page
        ul
            - foreach( i, kind; kinds )
                - if( hasChild!kind(info.mod) )
                    li
                        a(href="\##{kindids[i]}")= kindnames[i]

            - foreach( i, kind; tkinds )
                - if( hasChild!kind(info.mod) )
                    li
                        a(href="\##{tkindids[i]}")= tkindnames[i]
            li
                a(href="#authors") Authors
            li
                a(href="#license") License
            li
                a(href="#comments") Comments
