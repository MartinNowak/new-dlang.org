extends old_changelog

append new_features
    ul
        li
            - docLink("std.algorithm");
            | &mdash; reduce now works with non-range-based iteration,
            | such as opApply.
        li
            - docLink("std.numeric");
            | &mdash; Added FFT.
        li
            - docLink("std.path");
            | &mdash; Changed sep, altsep etc. to manifest constants (enum).
        li
            - docLink("std.process");
            | &mdash; Added environment, an AA-like interface for
            | environment variables.
        li
            - docLink("std.range");
            ul
                li
                    | Iota, Stride, Transversal, FrontTransveral now support
                    | slicing where possible.
                li
                    | Added support for moveFront() and assignable elements
                    | in several higher-order ranges.
                li Added Lockstep, hasLvalueElements.
                li
                    | Added virtual function-based wrappers (InputRangeObject,
                    | OutputRangeObject) for when a binary interface
                    | to a range is required.
        li
            - docLink("std.typecons");
            | &mdash; Added convenience functions for Rebindable.
        li
            - docLink("std.traits");
            ul
                li
                    | Added isAssignable, isIterable, ForeachType, isSafe,
                    | isUnsafe, EnumMembers.
                li
                    | hasLocalAliasing, hasLocalObjects and hasLocalRawAliasing
                    | are now hasUnsharedAliasing, hasUnsharedObjects and
                    | hasUnsharedRawAliasing. Aliases to the old names are
                    | included for now for backwards compatibility.
        li
            - docLink("std.typetuple");
            | &mdash; Added anySatisfy.
        li
            - docLink("std.array");
            | &mdash; Modified Appender's interface to fix memory issues.
            | Note that appending via ~= and using appender on the same
            | array will not interleave anymore.
        - bugItem(2477, "Trailing comma in array literal sometimes accepted, sometimes not");

append bugs_fixed
    ul
        li Andrej Mitrovic updated the samples/d code
        li Unlisted Bug: std.math.pow doesn't work on immutable numbers.
        li Unlisted Bug: std.math.pow floating point overload expects both arguments to be exact same type.
        li Unlisted Bug: std.path.join("", "foo") returns "/foo" instead of "foo" on Posix.
        li Unlisted Bug: std.range.iota() random access primitives inconsistent after popFront on floating point version
        li Unlisted Bug: std.algorithm.findAdjacent() [...]
        - bugItem(190, "Cannot forward reference typedef/alias in default value for function parameter");
        - bugItem(1715, "Template specialization checks for equality rather than convertibility");
        - bugItem(1970, "Templated interfaces not matched");
        - bugItem(2511, "Covariant return type doesn't work with circular import");
        - bugItem(2716, "Confusion of auto and scope as the class attribute");
        - bugItem(2903, "Splitter should be bi-dir if the input range is bi-dir.");
        - bugItem(2951, "std.random.dice() should be templated on proportions.");
        - bugItem(2958, "std.getopt RangeError on missing arg");
        - bugItem(3046, "Segfault with C++ static variable (Linux only)");
        - bugItem(3123, "std.algorithm.zip fails on 'lazy' ranges");
        - bugItem(3294, "forward reference to inferred return type of function call");
        - bugItem(3312, "std.string.count should use const(char)[], not immutable.");
        - bugItem(3348, "Documentation for many std.process functions has disappeared");
        - bugItem(3361, "code in std.zlib concatenates void[] arrays");
        - bugItem(3418, "link error with cast(ulong)(ulong*real)");
        - bugItem(3544, "optlink termination 0041338f with recursive nested functions");
        - bugItem(3554, "Ddoc generats invalid output for documentation comments with non paired paranthasis");
        - bugItem(3627, "-of with a filename with a double extension confuses linker");
        - bugItem(3877, "std.range.chain do not manage infinite ranges correctly");
        - bugItem(3894, "std.range.Stride!R requires R.front() and R.back() to return by reference");
        - bugItem(3935, "opBinary is instantiated with \"=\"");
        - bugItem(3946, "schwartzSort - SwapStrategy always unstable");
        - bugItem(3979, "Order-of-compilation and forward reference errors");
        - bugItem(3996, "Regression(2.041) ICE(glue.c) Passing struct as AA template parameter (Algebraic with struct)");
        - bugItem(4009, "OPTLINK ruins the day yet again");
        - bugItem(4173, "Regression(2.037) Explicitly instantiated templates still try to do IFTI in some cases");
        - bugItem(4177, "__ctfe can't be used in pure functions");
        - bugItem(4278, "allow inlining of super calls (undo limitations of bug3500's fix)");
        - bugItem(4291, "Pure functions cannot access mixed in variables");
        - bugItem(4292, "CommonType fails for singular alias value.");
        - bugItem(4302, "Regression(2.046, 1.061): compiler errors using startsWith in CTFE");
        - bugItem(4345, "std.range.take!string: \"Nonsensical finite range with slicing but no length\".");
        - bugItem(4346, "More flexible std.array.array.");
        - bugItem(4363, "Some phobos ranges are not forward ranges (but should be).");
        - bugItem(4381, "Length attribute for std.typecons.Tuple.");
        - bugItem(4387, "std.range.Cycle assumes lvalue elements.");
        - bugItem(4388, "std.range.Radial assumes lvalue elements.");
        - bugItem(4402, "std.range.Zip doesn't work w/ non-lvalue ranges.");
        - bugItem(4403, "std.range.FrontTransversal assumes lvalue elements.");
        - bugItem(4404, "std.range.Transversal assumes lvalue elements.");
        - bugItem(4408, "Ambiguity when using std.algorithm.splitter with generic ranges.");
        - bugItem(4430, "Regression(2.037) erroneous matching on specialized template function");
        - bugItem(4455, "Taking the sqrt of an integer shouldn't require an explicit cast.");
        - bugItem(4464, "std.range.take does not always return Take!R.");
        - bugItem(4518, "to!string(enum w/invalid value) produces a somewhat unhelpful error");
        - bugItem(4564, "ICE on undefined variable in foreach over 0 .. undef");
        - bugItem(4603, "array(iota(1, 0)) error.");
        - bugItem(4643, "Shared values are unwritable.");
        - bugItem(4645, "to!string(const char*) in library causes Optlink to issue warning");
        - bugItem(4652, "Compiler hangs on template with zero-length tuple and another argument");
        - bugItem(4655, "Regression(1.063, 2.048) goto to a try block ICEs");
        - bugItem(4676, "Overload resolution rejects valid code when mixing variadics, non-variadics");
        - bugItem(4681, "Appender access violation");
        - bugItem(4691, "Incorrect comparison of double and long");
        - bugItem(4700, "to!float(\"0\") fails");
        - bugItem(4721, "compilation slow when compiling unittests on dcollections");
        - bugItem(4748, "Shadowing declaration error in std.string.tolower");
        - bugItem(4751, "Regression(1.062, 2.047) ICE(constfold.c) >> after error");
        - bugItem(4752, "fail_compilation/fail345.d asserts in expression.c");
        - bugItem(4771, "fail_compilation/fail274.d hits a halt in iasm.c");
        - bugItem(4789, "std.algorithm.sort bug");
        - bugItem(4810, "dotProduct problem with ints");
        - bugItem(4826, "Regression(2.041) \"cannot create associative array\" and compiler crash");
        - bugItem(4828, "ICE w/ non-boolean dot expression sth.template_instance in static if");
        - bugItem(4834, "Implicit sharing via delegates in std.concurrency");
