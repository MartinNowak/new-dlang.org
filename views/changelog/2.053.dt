extends base_changelog

append new_features
    ul
        li Added 64 bit tools to Linux
        li Added FreeBSD support
        li Renamed linux/bin to linux/bin32, added linux/bin64
        li osx/lib32 renamed back to osx/lib
        li Added some gc benchmark apps
        li Move std.intrinsic to core.intrinsic
        li
            | Implemented <em>exception chaining</em>,
            | as described in TDPL for Posix.
        li
            | Added <strong>parent</strong> to
            | <strong>__traits</strong> for QtD support
        li Allow impure code inside debug conditionals
        li
            | Added cmpxchg16b, 64 bit bswap and movq instructions
            | to internal assembler
        li Added bindings for libcurl: etc.c.curl
        li Added std.net.isemail
        li Added std.parallelism
        li
            | Added support for positional parameter intervals,
            | e.g. %1:3$s prints the first three parameters using
            | the 's' format specifier
        li
            | Added findSplit, findSplitBefore, findSplitAfter
            | to std.algorithm; improved walkLength
        li Improved online documentation for std.algorithm
        li
            | Added roundRobin, takeOne, and takeNone to std.range;
            | improved stride
        li Added unsigned to std.traits
        li
            | Removed std.iterator. Use either std.range.ElementType
            | or std.range.ElementEncodingType depending on what
            | you're trying to do.
        - bugItem(2656, "Remove octal literals");
        - bugItem(4097, "Error: can only declare type aliases within static if conditionals");
        - bugItem(4360, "Allow intrinsics in core.bitop to operate as intrinsics");
        - bugItem(4833, "dmd -od doesn't make it to optlink's command line for map files");

append druntime_bugs_fixed
    ul
        - bugItem(5612, "core.cpuid not implemented on 64");
        - bugItem(1001, "print stack trace (in debug mode) when program die");
        - bugItem(5847, "Threads started by core.thread should have same floating point state as main thread");

append library_bugs_fixed
    ul
        - bugItem(4644, "assertExceptionThrown to assert that a particular exception was thrown");
        - bugItem(4944, "Missing tzname even though we have tzset");
        - bugItem(5451, "Three ideas for RedBlackTree");
        - bugItem(5474, "unaryFun byRef is borked for custom parameter name");
        - bugItem(5485, "TLS sections handled incorrectly in FreeBSD");
        - bugItem(5616, "std.datetime: not cross-platform");
        - bugItem(5654, "BigInt returns ZERO with strings of single digit number with leading zeros");
        - bugItem(5661, "std.algorithm.move does not work on elaborate struct");
        - bugItem(5731, "std.datetime.SysTime prints UTC offsets backwards");
        - bugItem(5761, "std.datetime: Date.this(int day) conversion fails for Dec 30 of leap years");
        - bugItem(5780, "[patch] std.traits.hasIndirections incorrectly handles static arrays");
        - bugItem(5781, "std.datetime: On Windows, times off by one hour in some years due to DST rule changes");
        - bugItem(5794, "std.datetime StopWatch (and perhaps benchmark) examples need a small fix");
        - bugItem(5928, "Bigint modulo problem -- critical wrong-code bug");

append dmd_bugs_fixed
    ul
        li Note: Although temporaries are destroyed now, they are not destroyed when exceptions are thrown. This is scheduled to be fixed.
        - bugItem(2436, "Unexpected OPTLINK termination EIP = 00425303 with /co");
        - bugItem(3372, "optlink silently mistreats object files with more than 16384 symbols");
        - bugItem(4275, "Unexpected optlink termination when 'export' attribute is missing");
        - bugItem(4808, "UNEXPECTED OPTLINK TERMINATION AT EIP=0042787B");
        - bugItem(5670, "Optlink 8.00.11 crash");
        - bugItem(937, "C-style variadic functions broken");
        - bugItem(1330, "Array slicing does not work the same way in CTFE as at runtime");
        - bugItem(1336, "Inconsistent __traits usage");
        - bugItem(1389, "Can't use mixin expressions when start of a statement.");
        - bugItem(1880, "templates instantiated with non-constants should fail sooner");
        - bugItem(2257, "Template value parameters behave like alias parameters");
        - bugItem(2414, "enum is dynamically evaluated, yum");
        - bugItem(2526, "non-const initializer to constant accepted inside template");
        - bugItem(2706, "invalid template instantiation (and declaration?) is not rejected");
        - bugItem(2733, "Unclear semantics of template value parameters");
        - bugItem(2841, "char[] incorrectly accepted as a template value argument in D2");
        - bugItem(2850, "bad codegen for struct static initializers");
        - bugItem(2990, "TypeInfo.init() returns invalid array");
        - bugItem(3086, "TypeInfo opEquals returns incorrect results");
        - bugItem(3214, "Incorrect DWARF line number debugging information on Linux");
        - bugItem(3271, "Struct initializers silently fail");
        - bugItem(3516, "Destructor not called on temporaries");
        - bugItem(3792, "Regression(1.053) \"non-constant expression\" for a template inside a struct using a struct initializer");
        - bugItem(3779, "[\"123\"][0][$-1] causes __dollar unresolved in compile-time");
        - bugItem(3801, "CTFE: this.arr[i] cannot be evaluated at compile time for structs");
        - bugItem(3835, "ref foreach does not work in CTFE");
        - bugItem(4033, "Error: base class is forward referenced");
        - bugItem(4050, "[CTFE] array struct member slice update");
        - bugItem(4051, "[CTFE] array struct member item update");
        - bugItem(4097, "Error: can only declare type aliases within static if conditionals");
        - bugItem(4140, "Error: non-constant expression \"hello\"[1u..__dollar]");
        - bugItem(4298, "Constant array translated to unnecessary array literal creation");
        - bugItem(4322, "\"void initializer has no value\" on struct/union members initialized to \"void\"");
        - bugItem(4329, "Do not show error messages that refer to __error");
        - bugItem(4360, "Allow intrinsics in core.bitop to operate as intrinsics");
        - bugItem(4437, "copy construction bug with \"return this;\"");
        - bugItem(4499, "calls to @disabled postblit are emitted");
        - bugItem(4543, "Regression(1.054, 2.038) typedef causes circular definition and segfault");
        - bugItem(4750, "fail_compilation/fail225.d causes dmd to segv");
        - bugItem(4815, "CodeView: Global and Static symbols should have unmangled names");
        - bugItem(4817, "CodeView: Enum members should have simple names");
        - bugItem(4833, "dmd -od doesn't make it to optlink's command line for map files");
        - bugItem(4917, "Symbol conflict error message refers to aliased symbol instead of the alias");
        - bugItem(5147, "[CTFE] Return fixed-size matrix");
        - bugItem(5268, "Outdated windows GUI sample in Samples folder");
        - bugItem(5362, "checking $ in bracket is broken");
        - bugItem(5482, "Crash with align(0)");
        - bugItem(5485, "TLS sections handled incorrectly");
        - bugItem(5524, "[CTFE] Trouble with typesafe variadic function");
        - bugItem(5647, "[64-bit] Valgrind complains about illegal instruction");
        - bugItem(5649, "std.conv.parse faulty for floating point with -O -m32");
        - bugItem(5657, "Temporary object destruction");
        - bugItem(5664, "Cannot compile static synchronized member function.");
        - bugItem(5694, "va_arg doesn't work with idouble and ifloat");
        - bugItem(5671, "CTFE string concat problem");
        - bugItem(5672, "ICE(cod2.c): incorrect optimization of (long &1) == 1");
        - bugItem(5678, "new enum struct re-allocated at compile time");
        - bugItem(5694, "va_arg doesn't work with idouble and ifloat");
        - bugItem(5706, "Incorrect opcode prefix generated for x86_64 inline assembly");
        - bugItem(5708, "Incorrect string constant folding with -inline");
        - bugItem(5717, "1.067 regression: appending Unicode char to string broken");
        - bugItem(5722, "Regression(2.052): Appending code-unit from multi-unit code-point at compile-time gives wrong result");
        - bugItem(5735, "non-scalar types implicitly converted to boolean");
        - bugItem(5740, "Unable to use this pointer in inline assembly");
        - bugItem(5741, "Add the SYSCALL and SYSRET opcodes to the inline assembler");
        - bugItem(5798, "Weakly pure function calls skipped inside a comma expression");
        - bugItem(5812, "Added constant fold optimisations for ^^ expressions");
        - bugItem(5840, "Cannot assign to an array member of struct in CTFE");
        - bugItem(5852, "CTFE: wrong code for string[] ~= const(string)");
        - bugItem(5858, "Import doesn't accept const string as argument");
        - bugItem(5865, "__dollar cannot be read at compile time");
        - bugItem(5890, "ICE and wrong scope problem for 2nd argument in static assert with DMD on git master");
        - bugItem(5916, "DMD: bad message for incorrect operands error");
        - bugItem(5938, "ICE ztc\\symbol.c 1043");
        - bugItem(5940, "Cannot create arrays of std.algorithm.map");
        - bugItem(5965, "[2.053 beta] map rejects a predicate with anon-func and nested func");
        - bugItem(5966, "[2.053 beta][CTFE] Stack overflow on trivial func");
        - bugItem(5972, "CTFE: Can't assign to elements of arrays of slices");
        - bugItem(5975, "[2.053 beta][CTFE] ICE: 'global.errors' on line 1416 in file 'constfold.c'");
        - bugItem(5976, "\"variable used before set\" with foreach with ref + scope(failure) + structure method + -O -inline");
        - bugItem(5982, "[2.053 beta] std.iterator gone, but no mention of the change");
        - bugItem(5987, "mydll sample doesn't compile");
        li Clarify tuple index out of bounds error message
        li Add 64 version of xchg and jmp to inline assembler. Fixed 64 bit LEA
        li CTFE: Generate error messages for accessing null arrays
        li Fix optimizer bug with to!float("123e2")
        li Fix spelling of <strong>cmpxchgb8</strong>
