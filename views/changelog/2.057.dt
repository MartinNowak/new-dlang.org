extends base_changelog

append new_features
    ul
        li Better use of XMM registers in 64 bit targets.
        li
            | The <code>invariant</code> keyword as a synonym for
            | <code>immutable</code> is now deprecated - use
            | <code>immutable</code> instead
        li Add Mach-O 64 bit support for obj2asm and dumpobj
        li classes, interfaces, and exceptions are supported in CTFE
        - bugItem(3474, "PATCH: Implement opDollar for struct and class indexing operations");
        - bugItem(6572, "Deprecate typedef");
        li
            | Major overhaul of std.regex module's implementation. Breaking
            | change in std.regex.replace with delegate, use
            | Captures!string instead of RegexMatch!string as delegate parameter.
        li
            | As typedef has been deprecated, overloads of std.conv.to which
            | use typedef have now been deprecated.
        li
            | std.array.insert has been deprecated. Please use
            | std.array.insertInPlace instead.
        li
            | The overload of std.array.replace which replaces in place has
            | been deprecated. Please use std.array.replaceInPlace instead.
        li
            | The toISOExtendedString and fromISOExtendedString functions on
            | SysTime, Date, TimeOfDay, and DateTime in std.datetime have
            | been deprecated. Please use toISOExtString and fromISOExtString
            | instead.
        li
            | std.file.getTimesPosix has been deprecated. Please use
            | std.file.getTimes instead.
        li
            | The overloads for isDir, isFile, and isSymlink in std.file which
            | take a uint have been deprecated. Please use attrIsDir,
            | attrIsFile, and attrIsSymlink instead.
        - bugItem(2550, "implicit conversions don't apply to template value parameter specialization");
        - bugItem(3467, "Non-int integral template parameters not correctly propagated");
        li Removed top const from dynamic array types and pointer types in IFTI.

append druntime_bugs_fixed
    ul
        - bugItem(6909, "incorrect definition of the OVERLAPPED struct in core.sys.windows.windows ?");

append library_bugs_fixed
    ul
        li Unlisted bug: std.conv: Fix to!float("-0")
        li Unlisted bug: std.file broken on OS X x86_64 due to wrong stat64 declaration.
        - bugItem(2936, "std.regex.match() short string optimization");
        - bugItem(4765, "std.math.modf always returns 0");
        - bugItem(5193, "SList cannot have struct elements that have immutable members.");
        - bugItem(5620, "Implicit conversion of RegexMatch to bool.");
        - bugItem(5712, "[patch] std.regex.replace disallows w/dstring");
        - bugItem(6204, "emplace() for classes accepts larger chunk but fails in array assignment");
        - bugItem(6887, "Regression of getopt");
        - bugItem(6888, "std.getopt.getopt: one-letter hash option causes range violation");
        - bugItem(6935, "struct with @disable this cannot make range");
        - bugItem(6953, "std.concurrency needs more documentation");
        - bugItem(6973, "static assert(isOutputRange!(OutputRange!int, int)) is false");
        - bugItem(6976, "GetLastError called as property");
        - bugItem(6977, "getErrno called as property in std.stdio");
        - bugItem(6979, "hasUnsharedAliasing cannot accept plural parameters");
        - bugItem(6990, "std.string.splitlines deprecation doc missing a word");
        - bugItem(7000, "missing import of std.stdio in std.regex?");
        - bugItem(7039, "Posix 2.057 Makefile error breaking 64bit build");
        - bugItem(7040, "Phobos must use \"version/else version\" blocks for proper documentation generation.");
        - bugItem(7045, "AssertError in std.regex on line 1573");
        - bugItem(7055, "to!float(\"INF2\") == 2");

append dmd_bugs_fixed
    ul
        - bugItem(2095, "covariance w/o typechecks = bugs");
        - bugItem(2532, "'=' does not give a boolean result");
        - bugItem(2778, "alias this + IFTI doesn't work.");
        - bugItem(2856, "static opIndex does not compile for a templated struct/class");
        - bugItem(3990, "Deferencing a dynamic array as pointer");
        - bugItem(4047, "[CTFE] class/struct heap allocation");
        - bugItem(4401, "auto functions cannot be inner functions");
        - bugItem(4511, "Contravariance problem");
        - bugItem(4583, "PIC code not working: EBX register set incorrectly");
        - bugItem(5311, "Pure is broken when accessing globals / static data through instance reference");
        - bugItem(5364, "optimizer kills high dword of -1");
        - bugItem(5416, "null should have a type of its own");
        - bugItem(5899, "auto-return function cannot match 'null' with reference type.");
        - bugItem(6056, "Type lookup problem in string mixins");
        - bugItem(6077, "CTFE: Cannot append null array to null array.");
        - bugItem(6330, "Cannot disable assignment to a struct.");
        - bugItem(6354, "Optimizer bug on x86_64: Bitshift optimized out when foreach and scope(failure) are used");
        - bugItem(6416, "[CTFE] Declaration static struct is not yet implemented in CTFE");
        - bugItem(6479, "spurious alias this with struct and mixin template");
        - bugItem(6522, "[CTFE] Problem with opAssign call in foreach(ref)");
        - bugItem(6603, "[CTFE] Can't call through a manifest constant function pointer");
        - bugItem(6736, "Regression(2.054): ICE (cgcod.c 1672) with alias this and certain structs");
        - bugItem(6763, "Using TypeTuple with (const/in/ref etc.) changes it forever");
        - bugItem(6792, "[CTFE] ICE with pointer cast of indexed array");
        - bugItem(6800, "[CTFE] dangerous pointer casts should be rejected");
        - bugItem(6805, "Can't use a type from opDispatch template");
        - bugItem(6816, "[CTFE] nested function can't access this");
        - bugItem(6817, "[CTFE] Error on interpreting inlined IfStatement");
        - bugItem(6832, "Can't test objects wrapped with alias this");
        - bugItem(6836, "map + UFCS = fail");
        - bugItem(6837, "alias this + UFCS = fail");
        - bugItem(6851, "[CTFE] Cannot deref pointer passed by argument");
        - bugItem(6859, "Segfault when abstract method uses with contract.");
        - bugItem(6864, "Const conversion should precedence over the shared one");
        - bugItem(6865, "inout matching removes shared qualifier");
        - bugItem(6866, "ICE(mtype.c): alias this and inout matching");
        - bugItem(6867, "inout and nested foreach loops");
        - bugItem(6868, "IsExp + incorrect static array type = error");
        - bugItem(6870, "type qualifiers behave inconsistently in combination with typeof");
        - bugItem(6872, "Breaking type parsing of shared(inout(int)[])");
        - bugItem(6877, "[XMM] regression, clobbered float value");
        - bugItem(6879, "The difference of between template matching and IsExp");
        - bugItem(6881, "[XMM] ICE with painted float");
        - bugItem(6885, "[CTFE] wrong code with dynamically allocated 2D array");
        - bugItem(6886, "[CTFE] ICE(interpret.c) new array with initializer");
        - bugItem(6901, "wrong error \"override cannot be applied to variable\" in CTFE forward reference");
        - bugItem(6902, "Different \"pure nothrow int()\" types");
        - bugItem(6910, "__traits(hasMember, \"\") does not work, if template has alias param");
        - bugItem(6912, "const(T)[] can be implicitly cast to inout(const(T)[])");
        - bugItem(6919, "[CTFE] Cannot get effect to local variable through its pointer");
        - bugItem(6922, "[TDPL] superimposing of const and immutable does not work correctly");
        - bugItem(6927, "Better @property management by chained functions");
        - bugItem(6928, "alias this, immutable and common type fail in presence of fields with indirections");
        - bugItem(6929, "[ICE] typeMerge crashes in presence of ambiguous alias this conversions");
        - bugItem(6941, ".stringof displays redundant storage classes");
        - bugItem(6972, "[CTFE] ICE with ubyte/=uint");
        - bugItem(6994, "Using explicit 'this' in template constraint causes an error");
        - bugItem(6997, "64bit optimizer bug");
        - bugItem(7004, "Iterating tuple with index which explicitly typed as size_t causes an error");
        - bugItem(7026, "64 bit optimizer bug");
        - bugItem(7027, "Struct member trySemantic() regression in DMD Git master");
        - bugItem(7028, "Fails to save FPU regs when executing finally block");
        - bugItem(7072, "[2.057 Beta] Assertion failure: '0' on line 145 in file 'mtype.c'");
        - bugItem(7093, "aliased type sometimes isn't resolved");
