extends basic_changelog

append new_features
    ul
        li Clarification: function returns are not lvalues
        li
            | Added shared static constructors/destructors,
            | regular static constructors/destructors now deal with TLS
        li Add <strong>-map</strong> command line switch
        li
            | Add
            a(href="/attribute#disable") @disable
            | attribute
        li Delegates and function pointers may be used in CTFE
        li Delegate literals and function literals may be used in CTFE
        li Lazy function parameters may now be used in CTFE
        li Slicing of char[] arrays may now be used in CTFE
        li added static/final function implementations to interfaces
        li
            | added <strong>getOverloads</strong>, <strong>identifier</strong>,
            | and <strong>isStaticFunction</strong> traits.
        li ModuleInfo changed from class to struct
        - bugItem(3556, "version(CTFE)");
        - bugItem(3728, "getOverloads and identifier traits");

append bugs_fixed
    ul
        li Added TLS support for OSX
        - bugItem(47, "Internal error: cg87 3316");
        - bugItem(1298, "CTFE: tuple foreach bugs");
        - bugItem(1790, "CTFE: foreach(Tuple) won't compile if Tuple contains string");
        - bugItem(2101, "CTFE: Please may I use mutable arrays at compile time?");
        - bugItem(2066, "to!(string)(int) into CTFE-compatible");
        - bugItem(3488, "Segfault(expression.c): enum declared with struct static initializer");
        - bugItem(3535, "struct constructors don't work in CTFE");
        - bugItem(3552, "ICE(mtype.c): declaring a variable called 'AssociativeArray' then using an AA.");
        li
            | Partial fix for
            - bugLink(3569);
            | , stops the stack overflow
        - bugItem(3600, "template instantiation with empty tuple");
        - bugItem(3660, "Templates and shared functions don't mix");
        - bugItem(3668, "foreach over typedef'd array crashes dmd");
        - bugItem(3671, "x^^3 gives wrong result when x is a floating-point literal");
        - bugItem(3674, "forward reference error with multiple overloads with same name");
        - bugItem(3675, "Regression: Struct literals cannot be initialized with another struct literal");
        - bugItem(3687, "Array operation \"slice times scalar\" tramples over memory");
        - bugItem(3719, "forward references can cause out-of-memory error");
        - bugItem(3723, "Regression: forward referenced enum");
        - bugItem(3724, "bug in Expression::arraySyntaxCopy (null pointer dereference on struct->union->struct)");
        - bugItem(3726, "Regression: ICE(mangle.c 81): struct forward reference with static this");
        - bugItem(3727, "lots of \"deffering SomeStructName\" messages when compiling");
        - bugItem(3734, "[patch] src/traits.c does not compile with gcc (Ubuntu 4.4.1-4ubuntu8) 4.4.1");
        - bugItem(3740, "Regression: class with fwd reference of a nested struct breaks abstract");
