extends old_changelog

append new_features
    ul
        li std.complex: New Complex.toString() syntax.
        li std.string: icmp() now works with all built-in string types.
        - bugItem(4077, "Bugs caused by bitwise operator precedence");
        - bugItem(4080, "Patch for building dynamic libraries on Mac OS X");

append bugs_fixed
    ul
        li Unlisted Bug: std.algorithm.filter not a forward range
        li Unlisted Bug: std.algorithm.Uniq requires a bidirectional range
        li Unlisted Bug: std.algorithm.Uniq missing a save() function
        li Unlisted Bug: std.algorithm.Group missing a save() function
        li Unlisted Bug: std.traits.isAssociativeArray reports true for structs w/ keys, values properties
        li Unlisted Bug: gc_query returns 0 for attr when called on interior pointers
        li
            a(href="http://digitalmars.com/webnews/newsgroups.php?search_txt=&group=digitalmars.D&article_id=112964") D/112964:
            | capacity can return a value < length
        - bugItem(978, "std.utf's toUTF* functions accept some invalid and reject some valid UTF");
        - bugItem(996, "Error in doc on implicit conversion between pointer and array");
        - bugItem(1418, "tupleof bug on nested classes");
        - bugItem(1678, "ref with varargs generates invalid code");
        - bugItem(2275, "std.utf.toUTF16z() should return const(wchar)*");
        - bugItem(2627, "std.traits.hasAliasing reports true for static arrays");
        - bugItem(2872, "Length, opIndex for Map");
        - bugItem(2931, "Initialization struct with array from another struct");
        - bugItem(3202, "std.math.pow cause dead loop");
        - bugItem(3326, "$ in delegate literal causes Access Violation");
        - bugItem(3355, "std.string.cmp works incorrectly for mixed-type and different-length strings");
        - bugItem(3386, "to!bool(string) is not implemented");
        - bugItem(3436, "std.functional.compose with only one function");
        - bugItem(3439, "std.range.Sequence.opIndex not consistent after calling popFront().");
        - bugItem(3447, "std.file uses unconventional file permissions");
        - bugItem(3528, "FreeBSD patches for druntime.");
        - bugItem(3560, "foreach over nested function generates wrong code");
        - bugItem(3569, "DMD Stack Overflow with a struct member function inside a C-style struct initializer");
        - bugItem(3604, "extern(C) callable function with array parameters broken");
        - bugItem(3679, "Regression(2.031) template forward reference regression");
        - bugItem(3706, "delegates of interfaces with multiple inheritance fail");
        - bugItem(3716, "Regression (2.037) with multi dimensional array literals");
        - bugItem(3782, "The POSIX sys/un.h header");
        - bugItem(3853, "core.sys.posix.stdio.pclose is missing");
        - bugItem(3872, "std.algorithm.filter could become bidirectional if its input range is bidir");
        - bugItem(3874, "std.range.stride assumes a bidirectional input range");
        - bugItem(3917, "opEquals for Ojbect could be more efficient");
        - bugItem(3937, "os.path.dirname fails on absolute path");
        - bugItem(3961, "Error with to!(somestruct)");
        - bugItem(3983, "Regression(2.037): struct with == can't be member of struct with template opEquals");
        - bugItem(4109, "(reopened) writeln doesn't work with empty static array");
        - bugItem(4171, "std.random.uniform does not work for a range of characters");
        - bugItem(4191, "[FreeBSD] real constants are rounded to double precision");
        - bugItem(4198, "[FreeBSD] imprecision in decimal floating-point literals");
        - bugItem(4238, "Segfault(statement.c): with(typeof(int))");
        - bugItem(4260, "windows & basename");
        - bugItem(4267, "forward reference error when 2-fold aliasing a template instance");
        - bugItem(4303, "__traits(compiles) returns wrong result when used recursively");
        - bugItem(4305, "Take, Chain on top of ranges w/o moveFront()");
        - bugItem(4307, "spawn()'ed thread doesn't terminate");
        - bugItem(4314, "Regression(1.062): Expression array1 && array2 doesn't compile");
        - bugItem(4327, "std.container.Array.Range.~this() tries to call free(T[])");
        - bugItem(4339, "Struct destructor + invariant + struct parameter = horrific error message");
        - bugItem(4356, "Copy constructor not called under extremely mysterious circumstances");
        - bugItem(4362, "std.range.repeat and cycle do not have a .save() method");
        - bugItem(4363, "std.algorithm.Until is not a forward range");
        - bugItem(4369, "Multiple bugs in GC minimize()");
        - bugItem(4370, "POSIX monitor attribute not being used");
        - bugItem(4396, "mkdir race prevents concurrent compiling with DMD using make -j");
        - bugItem(4400, "D2 GC doesn't allocate with 16 bytes alignment");
        - bugItem(4406, "Typo (bug) in std.concurrency");
        - bugItem(4412, "Array capacity growth spikey and the ratio approaches 1.0");
        - bugItem(4443, "Optimizer produces wrong code for || or && with struct arrays");
        - bugItem(4452, "Incorrect result of BigInt ^^ long");
        - bugItem(4470, "Problems with std.bigint mod and divide");
        - bugItem(4503, "forward reference to aliased template instance");
        - bugItem(4506, "Regression(2.034): -O flag breaks some recursive functions");
        - bugItem(4514, "Regression: Cannot cast from X* to X");
        - bugItem(4516, "Regression(2.040): forward declaration of enum not supported");
        - bugItem(4551, "D2 Language Docs: http://www.digitalmars.com/d/2.0/arrays.html");
        - bugItem(4569, "extern(c++) doesn't understand const types, produces bad mangled symbol");
        - bugItem(4570, "ElementType!(void[]) shows error message");
        - bugItem(4578, "Regression(2.047,1.062): ICE(cgcod.c): var+arr[]");
        - bugItem(4590, "Spec incorrectly describes array appending and memory stomping");
