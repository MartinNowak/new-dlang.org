extends old_changelog

append new_features
    ul
        li
            | Escape string literals deprecated, see
            - bugLink(2658);
        li
            | Tripled speed of exp, expm1, and exp2.
            | std.math is now less dependent on the C standard library.
        li Added nested structs.
        li Added buildable dmd source.
        li
            | Many changes to std.math for speed, accuracy,
            | and Tango compatibility:

            ul
                li
                    | Improved accuracy of exp, expm1, exp2, sinh, cosh,
                    | tanh on Mac OSX, and tripled speed on all platforms.
                li
                    | Now using IEEE754-2008 camelCase names for isNaN,
                    | isFinite, isNormal, isSubnormal, isInfinity.
                    | Aliases for the old names have been retained.
                li
                    | The non-functional nan(char[]) is replaced
                    | with NaN, getNaNpayload.

append bugs_fixed
    ul
        - bugItem(1603, "String literals bind to pointer types");
        - bugItem(1629, "Link error: Previous Definition Different: blablah__initZ");
        - bugItem(1662, "Falls back to libphobos if -debuglib isn't used when -g is");
        - bugItem(1681, "cast(real) ulong.max == 0");
        - bugItem(2416, "Slice of typedef'ed array should preserve the typedef'ed type");
        - bugItem(2597, "auto return doesn't work for a variety of cases");
        - bugItem(2612, "immutable not accepted wherever invariant is");
        - bugItem(2619, "Locally-instantiated structs are not instantiated locally");
        - bugItem(2621, "ref binds to rvalues of user-defined types");
        - bugItem(2622, "ref returns not allowed in complex template");
        - bugItem(2623, "Function type drops ref spec");
        - bugItem(2670, "std.file.read() should read files of 0 length");
        - bugItem(2673, "Static constructors sometimes do not run when compiling with -lib");
        - bugItem(2675, "cannot foreach structs with copy constructor");
        - bugItem(2676, "alias parameters not matched in concept if clause");
        - bugItem(2677, "Alias type parameters not visible in concept-if clauses");
        - bugItem(2678, "for loops are already assumed to terminate");
        - bugItem(2679, "Spurious \"warning - \" messages and erratic behaviour with is(typeof({void function}()))");
        - bugItem(2684, "Associative arrays have wrong opIndex signatures");
        - bugItem(2690, "DMD aborts with MALLOC_CHECK_ set");
